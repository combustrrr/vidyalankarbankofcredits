name: CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint || true # Continue even if lint fails
    
    - name: Type check
      run: npm run type-check || true  # Assumes you have a type-check script
    
    - name: Build
      run: npm run build
      env:
        # Set dummy values for build
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://example.com' }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'dummy-key' }}
    
    - name: Store build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: .next/
        retention-days: 7

  # Optional: Run database migrations in staging/production
  migrate-database:
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup database migration script
      run: |
        echo '#!/bin/bash' > run-migrations.sh
        echo 'cat utils/setup-program-structure.sql | PGPASSWORD=$SUPABASE_DB_PASSWORD psql -h $SUPABASE_DB_HOST -U $SUPABASE_DB_USER -d postgres' >> run-migrations.sh
        echo 'cat utils/update-courses-table.sql | PGPASSWORD=$SUPABASE_DB_PASSWORD psql -h $SUPABASE_DB_HOST -U $SUPABASE_DB_USER -d postgres' >> run-migrations.sh
        chmod +x run-migrations.sh
      shell: bash
    
    - name: Run migrations
      run: ./run-migrations.sh
      env:
        SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
        SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      # This step only runs if the secrets are configured

  # Optional: Deploy to production/staging
  deploy:
    needs: [build, migrate-database]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .next/
    
    # If you're deploying to Vercel, use their GitHub Action instead
    - name: Deploy to Vercel
      if: ${{ secrets.VERCEL_TOKEN != '' }}
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'